-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE OR REPLACE FUNCTION public.get_user_profile_id(
	user_id uuid)
    RETURNS uuid
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE PARALLEL UNSAFE
AS $BODY$
declare
   profile_id public.user_profiles.id%type;
begin
  select id 
  from user_profiles up
  into profile_id
  where user_id = up.user_id;
  if not found then
     raise 'User with id % not found', user_id;
  end if;
  return profile_id;
end;
$BODY$;

ALTER FUNCTION public.get_user_profile_id(uuid)
    OWNER TO postgres;

GRANT EXECUTE ON FUNCTION public.get_user_profile_id(uuid) TO PUBLIC;

GRANT EXECUTE ON FUNCTION public.get_user_profile_id(uuid) TO anon;

GRANT EXECUTE ON FUNCTION public.get_user_profile_id(uuid) TO authenticated;

GRANT EXECUTE ON FUNCTION public.get_user_profile_id(uuid) TO postgres;

GRANT EXECUTE ON FUNCTION public.get_user_profile_id(uuid) TO service_role;

CREATE OR REPLACE FUNCTION public.create_user_profile()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE NOT LEAKPROOF SECURITY DEFINER
AS $BODY$
begin
  insert into public.user_profiles (user_id, display_name)
  values (new.id, 'New User');
  return new;
end;
$BODY$;

ALTER FUNCTION public.create_user_profile()
    OWNER TO postgres;

GRANT EXECUTE ON FUNCTION public.create_user_profile() TO authenticated;

GRANT EXECUTE ON FUNCTION public.create_user_profile() TO postgres;

GRANT EXECUTE ON FUNCTION public.create_user_profile() TO PUBLIC;

GRANT EXECUTE ON FUNCTION public.create_user_profile() TO anon;

GRANT EXECUTE ON FUNCTION public.create_user_profile() TO service_role;

ALTER TABLE IF EXISTS public.boards
    ADD COLUMN profile_id uuid NOT NULL;

ALTER TABLE IF EXISTS public.boards
    ADD CONSTRAINT boards_profile_id_fkey FOREIGN KEY (profile_id)
    REFERENCES public.user_profiles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

ALTER TABLE IF EXISTS public.games_users
    ADD COLUMN profile_id uuid;

ALTER TABLE IF EXISTS public.games_users
    ADD CONSTRAINT games_users_profile_id_fkey FOREIGN KEY (profile_id)
    REFERENCES public.user_profiles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
